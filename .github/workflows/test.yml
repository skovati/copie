name: Test

on:
  push:
    branches:
      - main

env:
  AERIE_USERNAME: "aerie"
  AERIE_PASSWORD: "aerie"
  HASURA_GRAPHQL_ADMIN_SECRET: "hasura"
  HASURA_GRAPHQL_JWT_SECRET: '{ "type": "HS256", "key": "oursupersecretsupersecurekey1234567890" }'
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "postgres"

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "19"
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Assemble
        run: ./gradlew assemble
      - name: Run Unit Tests
        run: ./gradlew test
      - name: Upload Test Results as XML
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results
          path: "**/build/test-results/test"
      - name: Upload Test Results as HTML
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results
          path: "**/build/reports/tests/test"

  e2e-test:
    runs-on: ubuntu-latest
    environment: e2e-test
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "19"
      - name: Setup Postgres Client (psql)
        run: |
          sudo apt-get update
          sudo apt-get install --yes postgresql-client
      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Assemble
        run: ./gradlew assemble
      - name: Start Services
        run: |
          docker compose -f ./e2e-tests/docker-compose-test.yml up -d --build
          docker images
          docker ps -a
      - name: Sleep for 30 Seconds
        run: sleep 30s
        shell: bash
      - name: Run E2E Tests
        run: ./gradlew e2eTest
      - name: Upload E2E Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results
          path: "**/e2e-tests/test-results"
      - name: Upload Sequencing Server Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Results
          path: "**/sequencing-server/test-report.html"
      - name: Print Logs for Services
        if: always()
        run: docker compose -f ./e2e-tests/docker-compose-test.yml logs -t
      - name: Stop Services
        if: always()
        run: |
          docker ps -a
          docker compose -f ./e2e-tests/docker-compose-test.yml down
          docker ps -a
      - name: Prune Volumes
        if: always()
        run: docker volume prune --force
