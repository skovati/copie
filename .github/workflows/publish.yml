name: Publish

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io

jobs:
  compile:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "19"
      - uses: actions/cache@v3
        with:
          path: |
            ./build
            ./**/build
            ./deployment
            ./sequencing-server
            ./merlin-server/constraints-dsl-compiler
            ./scheduler-worker/scheduling-dsl-compiler
          key: ${{ runner.os }}-gradle-${{ github.sha }}
      - uses: gradle/wrapper-validation-action@v1
      - name: assemble project
        run: ./gradlew assemble --parallel --no-daemon

  build-push:
    strategy:
      matrix:
        components:
          - image: aerie-merlin
            context: ./merlin-server
            file: ./merlin-server/Dockerfile
          - image: aerie-merlin-worker
            context: ./merlin-worker
            file: ./merlin-worker/Dockerfile
          - image: aerie-scheduler
            context: ./scheduler-server
            file: ./scheduler-server/Dockerfile
          - image: aerie-scheduler-worker
            context: ./scheduler-worker
            file: ./scheduler-worker/Dockerfile
          - image: aerie-sequencing
            context: ./sequencing-server
            file: ./sequencing-server/Dockerfile
          - image: aerie-hasura
            context: .
            file: ./docker/Dockerfile.hasura
          - image: aerie-postgres
            context: .
            file: ./docker/Dockerfile.postgres
    needs: compile
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ./build
            ./**/build
            ./deployment
            ./sequencing-server
            ./merlin-server/constraints-dsl-compiler
            ./scheduler-worker/scheduling-dsl-compiler
          key: ${{ runner.os }}-gradle-${{ github.sha }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to the Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract metadata (tags, labels) for Docker image
        id: metadataStep
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/skovati/${{ matrix.components.image }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.components.context }}
          file: ${{ matrix.components.file }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.metadataStep.outputs.tags }}
          labels: ${{ steps.metadataStep.outputs.labels }}

  scan:
    strategy:
      matrix:
        image:
          - aerie-merlin
          - aerie-merlin-worker
          - aerie-scheduler
          - aerie-scheduler-worker
          - aerie-sequencing
          - aerie-hasura
          - aerie-postgres
    needs: build-push
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
      - name: Scan Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/skovati/${{ matrix.image }}:main
          ignore-unfixed: true
          severity: 'CRITICAL'
          format: 'sarif'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        if: ${{ always() }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
