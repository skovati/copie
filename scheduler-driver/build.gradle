plugins {
  id 'java-library'
  id 'jacoco'
  id 'maven-publish'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(19)
  }
}

test {
  useJUnitPlatform()
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.required = true
  }
}

dependencies {
  api 'com.apollographql.apollo:apollo-api:2.5.11'
  compileOnly project(':merlin-driver')
  compileOnly project(':constraints')

  implementation 'org.apache.commons:commons-lang3:3.12.0'
  implementation 'org.apache.commons:commons-math3:3.6.1'
  implementation 'com.google.guava:guava:31.0.1-jre'
  implementation 'org.jfree:jfreechart:1.5.3'
  implementation 'com.google.code.gson:gson:2.8.9'
  implementation 'org.jgrapht:jgrapht-core:1.5.1'
  implementation 'org.slf4j:slf4j-simple:2.0.3'

  testImplementation project(':merlin-framework-junit')
  testImplementation project(':constraints')
  testImplementation project(':examples:banananation')
  testImplementation project(':examples:foo-missionmodel')
  testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
  testImplementation 'com.google.guava:guava-testlib:31.0.1-jre'
  testImplementation 'com.google.truth.extensions:truth-java8-extension:1.1.3'
  //for when aerielander will be published
  //testImplementation 'gov.nasa.jpl.aerie:aerielander:0.11.0-SNAPSHOT-+'
  testImplementation files('src/test/resources/gov/nasa/jpl/aerie/scheduler/aerielander.jar')
}

publishing {
  publications {
    library(MavenPublication) {
      version = findProperty('publishing.version')
      from components.java
    }
  }

  publishing {
    repositories {
      maven {
        name = findProperty("publishing.name")
        url = findProperty("publishing.url")
        credentials {
          username = System.getenv(findProperty("publishing.usernameEnvironmentVariable"))
          password = System.getenv(findProperty("publishing.passwordEnvironmentVariable"))
        }
      }
    }
  }
}
